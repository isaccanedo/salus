{"database":{"advisory-count":113,"last-commit":"49dba073a8966457720ac568c68d332a53fd1717","last-updated":"2020-09-06T22:16:47Z"},"lockfile":{"dependency-count":7},"settings":{"target_arch":null,"target_os":null,"severity":null,"ignore":[],"informational_warnings":["unmaintained"],"package_scope":null},"vulnerabilities":{"found":true,"count":1,"list":[{"advisory":{"id":"RUSTSEC-2019-0010","package":"libflate","title":"MultiDecoder::read() drops uninitialized memory of arbitrary type on panic in client code","description":"Affected versions of libflate have set a field of an internal structure with a generic type to an uninitialized value in `MultiDecoder::read()` and reverted it to the original value after the function completed. However, execution of `MultiDecoder::read()` could be interrupted by a panic in caller-supplied `Read` implementation. This would cause `drop()` to be called on uninitialized memory of a generic type implementing `Read`.\n\nThis is equivalent to a use-after-free vulnerability and could allow an attacker to gain arbitrary code execution.\n\nThe flaw was corrected by aborting immediately instead of unwinding the stack in case of panic within `MultiDecoder::read()`. The issue was discovered and fixed by Shnatsel.\n","date":"2019-07-04","aliases":["CVE-2019-15552"],"references":[],"collection":"crates","categories":[],"keywords":["drop","use-after-free"],"cvss":null,"informational":null,"obsolete":false,"url":"https://github.com/sile/libflate/issues/35","patched_versions":[],"unaffected_versions":[]},"versions":{"patched":[">= 0.1.25"],"unaffected":["< 0.1.14"]},"affected":{"arch":[],"os":[],"functions":{"libflate::gzip::MultiDecoder::read":["< 0.1.25, >= 0.1.14"]}},"package":{"name":"libflate","version":"0.1.19","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":null,"dependencies":[{"name":"adler32","version":"1.1.0","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"crc32fast","version":"1.2.0","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"rle-decode-fast","version":"1.0.1","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"take_mut","version":"0.2.2","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null}}]},"warnings":{"yanked":[{"kind":"yanked","package":{"name":"libflate","version":"0.1.19","source":"registry+https://github.com/rust-lang/crates.io-index","checksum":null,"dependencies":[{"name":"adler32","version":"1.1.0","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"crc32fast","version":"1.2.0","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"rle-decode-fast","version":"1.0.1","source":"registry+https://github.com/rust-lang/crates.io-index"},{"name":"take_mut","version":"0.2.2","source":"registry+https://github.com/rust-lang/crates.io-index"}],"replace":null},"advisory":null,"versions":null}]}}